# ============================
# nginx/default.dev.conf.template
# ============================

# Upgrade WebSocket connections automatically when needed.
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Define a flag based on NGINX_ENV to control HTTPS redirection.
# When NGINX_ENV=production, $redirect_to_https will be set to 1, otherwise 0.
map $NGINX_ENV $redirect_to_https {
    production 1;
    default    0;
}

# HTTP server â€“ handles development traffic.
# Proxies API requests to the backend and other requests to the React dev server.
server {
    listen 80;
    server_name ${DOMAIN:-localhost};

    # Location used by Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Health check endpoint for Nginx.  This always returns 200 OK
    # and is used by Docker HEALTHCHECK in the Nginx image.
    location = /healthz {
        return 200 'ok';
        add_header Content-Type text/plain;
    }

    # If the environment is production, redirect all HTTP traffic to HTTPS.
    # In development $redirect_to_https is 0, so no redirect occurs.
    if ($redirect_to_https) {
        return 301 https://$host$request_uri;
    }

    # Proxy API requests to the backend service on port 5000.
    location /api/ {
        proxy_pass http://backend:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Proxy all other requests to the React dev server on port 3000.
    location / {
        proxy_pass http://frontend:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
