# ============================
# docker-compose.yml (یک‌پارچه برای dev/prod)
# ============================
version: "3.9"
services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongo:27017/contracts
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:80,http://localhost:3000}
    depends_on:
      - mongo
    networks: [app]

  # فقط در توسعه لازم است؛ در prod از سرویس nginx (serve stage) برای استاتیک استفاده می‌کنیم
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - NGINX_ENV=${NGINX_ENV:-development}
      - DOMAIN=${DOMAIN:-localhost}
    networks: [app]

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_ENV=${NGINX_ENV:-development}
      - DOMAIN=${DOMAIN:-localhost}
    volumes:
      # template و entrypoint
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/99-envsubst.sh:ro
      # گواهی‌ها (اختیاری –‌ در صورت استفاده از certbot)
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      # اگر می‌خواهید استاتیک‌ها را همین‌جا سرو کنید (prod):
      - ./frontend/build:/usr/share/nginx/html:ro
    networks: [app]

  # اختیاری: دریافت/نوسازی گواهی‌ها
  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done"

networks:
  app: {}

volumes:
  mongo_data: {}
  certbot-etc: {}
  certbot-var: {}
