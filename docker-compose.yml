version: "3.9"

services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongo:27017/contracts
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:80,http://localhost:3000}
    depends_on:
      - mongo
    networks: [app]

  # سرویس فرانت تنها در محیط توسعه build و اجرا می‌شود
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - NGINX_ENV=${NGINX_ENV:-development}
      - DOMAIN=${DOMAIN:-localhost}
    networks: [app]

  nginx:
    # استفاده از Dockerfile سفارشی nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_ENV=${NGINX_ENV:-development}
      - DOMAIN=${DOMAIN:-localhost}
    volumes:
      # گواهی‌ها (اختیاری – در صورت استفاده از certbot)
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      # خروجی build فرانت‌اند (برای prod)
      - ./frontend/build:/usr/share/nginx/html:ro
    networks: [app]

  # سرویس تجدید گواهی‌ها (اختیاری)
  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done"

networks:
  app: {}

volumes:
  mongo_data: {}
  certbot-etc: {}
  certbot-var: {}
